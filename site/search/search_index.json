{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#api-documentation","title":"API Documentation","text":""},{"location":"#overview","title":"Overview","text":"<p>This API documentation outlines the process for non-blocking transactions, specifically for topping up and cashing out using Nil and OSS wallets. The design ensures efficient, secure, and resilient transaction processing, suitable for a growing user base.</p>"},{"location":"#table-of-contents","title":"Table of Contents","text":"<ol> <li>Top-up Process for Nil Users<ul> <li>Endpoints</li> <li>Web Hooks</li> <li>Keys Management</li> </ul> </li> <li>Cash Out Process for OSS Users<ul> <li>Endpoints</li> <li>Web Hooks</li> <li>Keys Management</li> </ul> </li> <li>Error Handling</li> <li>Nil Error Codes</li> <li>Security Considerations</li> <li>Rate Limiting and Throttling</li> <li>Versioning</li> <li>Administrative Tasks</li> </ol>"},{"location":"#top-up-process-for-nil-users","title":"Top-up Process for Nil Users","text":""},{"location":"#endpoints","title":"Endpoints","text":"<p>Tip</p> <p>Base url for accessing our endpoint behind tailscale VPN is: https://nil.tailf4a43a.ts.net</p>"},{"location":"#initiate-top-up","title":"Initiate Top-up","text":"<ul> <li>URL: <code>/api/v1/topup/initiate</code></li> <li>Method: POST</li> <li>Description: Initiates a top-up transaction for a Nil user.</li> <li>Request Body:</li> </ul> <pre><code>{\n    \"user_id\": \"string\",\n    \"amount\": \"number\",\n    \"service_provider\": \"string\",\n    \"uuid\": \"string\",\n    \"signed_uuid\": \"string\",\n    \"timestamp\": \"string\",\n    \"currency\": \"string\"\n}\n</code></pre> <ul> <li>Response:</li> </ul> <pre><code>{\n    \"status\": \"success\",\n    \"code\": \"topup_initiated\",\n    \"message\": \"Transaction initiated successfully.\",\n    \"data\": {\n        \"transaction_id\": \"txn_001\",\n        \"status\": \"pending\",\n        \"amount\": 100.00,\n        \"currency\": \"USD\",\n        \"uuid\": \"uuid_001\",\n        \"signed_uuid\": \"signed_uuid_001\"\n    }\n}\n</code></pre> <ul> <li>Error Response Example:</li> </ul> <pre><code>{\n    \"status\": \"error\",\n    \"code\": \"insufficient_balance\",\n    \"message\": \"Insufficient balance to complete the transaction.\",\n    \"details\": \"The user does not have enough balance in their account.\",\n    \"timestamp\": \"2024-05-24T12:05:00Z\",\n    \"uuid\": \"uuid_001\",\n    \"signed_uuid\": \"signed_uuid_001\"\n}\n</code></pre>"},{"location":"#cash-out-process-for-oss-users","title":"Cash Out Process for OSS Users","text":""},{"location":"#endpoints_1","title":"Endpoints","text":""},{"location":"#initiate-cash-out","title":"Initiate Cash Out","text":"<ul> <li>URL: <code>/api/v1/cashout/initiate</code></li> <li>Method: POST</li> <li>Description: Initiates a cash-out transaction for an OSS user.</li> <li>Request Body:</li> </ul> <pre><code>{\n    \"uuid\": \"string\",\n    \"signed_uuid\": \"string\",\n    \"timestamp\": \"string\",\n    \"from_account\": \"string\",\n    \"to_account\": \"string\",\n    \"amount\": \"number\",\n    \"currency\": \"string\",\n    \"notes\": \"string\",\n    \"service_provider\": \"string\"\n}\n</code></pre> <ul> <li>Response:</li> </ul> <pre><code>{\n    \"status\": \"success\",\n    \"code\": \"cashout_initiated\",\n    \"message\": \"Cash out request processed successfully.\",\n    \"data\": {\n        \"transaction_id\": \"txn_002\",\n        \"status\": \"pending\",\n        \"amount\": 200.00,\n        \"currency\": \"USD\",\n        \"timestamp\": \"2024-05-24T12:10:00Z\",\n        \"uuid\": \"uuid_001\",\n        \"signed_uuid\": \"signed_uuid_001\"\n    }\n}\n</code></pre> <ul> <li>Error Response Example:</li> </ul> <pre><code>{\n    \"status\": \"error\",\n    \"code\": \"permission_denied\",\n    \"message\": \"User does not have permission to perform this operation.\",\n    \"details\": \"The authenticated user is not authorized to perform this cash-out operation.\",\n    \"timestamp\": \"2024-05-24T12:10:00Z\",\n    \"uuid\": \"uuid_001\",\n    \"signed_uuid\": \"signed_uuid_001\"\n}\n</code></pre>"},{"location":"#check-transaction-status","title":"Check Transaction Status","text":"<ul> <li>URL: <code>/api/v1/transaction/status</code></li> <li>Method: POST</li> <li>Description: Checks the status of a transaction.</li> <li>Request Parameters:</li> </ul> <pre><code>{\n    \"uuid\": \"string\",\n    \"signed_uuid\": \"string\",\n    \"timestamp\": \"string\",\n    \"service_provider\": \"string\",\n    \"original_uuid\": \"string\"\n}\n</code></pre> <ul> <li>Response:</li> </ul> <pre><code>{\n    \"status\": \"success\",\n    \"code\": \"transaction_status_retrieved\",\n    \"message\": \"Transaction status retrieved successfully.\",\n    \"data\": {\n        \"original_uuid\": \"txn_001\",\n        \"status\": \"completed\",\n        \"type\": \"top-up\",\n        \"details\": \"Transaction processed successfully.\",\n        \"last_checked\": \"2024-05-24T12:05:00Z\",\n        \"uuid\": \"uuid_001\",\n        \"signed_uuid\": \"signed_uuid_001\"\n    }\n}\n</code></pre>"},{"location":"#user-info","title":"User Info","text":"<ul> <li>URL: <code>/api/v1/user</code></li> <li>Method: POST</li> <li>Description: Inquires about a nil user public profile</li> <li>Request Body:</li> </ul> <pre><code>{\n    \"user_id\": \"string\",\n    \"service_provider\": \"string\",\n    \"uuid\": \"string\",\n    \"signed_uuid\": \"string\",\n    \"timestamp\": \"string\"\n}\n</code></pre> <ul> <li>Response:</li> </ul> <pre><code>{\n    \"status\": \"success\",\n    \"code\": \"user_info_retrieved\",\n    \"message\": \"User info retrieved successfully.\",\n    \"data\": {\n        \"user_id\": \"user_1\",\n        \"fullname\": \"Mohamed Ahmed\",\n        \"status\": \"active\"\n    }\n}\n</code></pre> <ul> <li>Error Response Example:</li> </ul> <pre><code>{\n    \"status\": \"error\",\n    \"code\": \"invalid_user_id\",\n    \"message\": \"User doesn't exist.\",\n    \"details\": \"The user ID provided is invalid.\",\n    \"timestamp\": \"2024-05-24T12:05:00Z\",\n    \"uuid\": \"uuid_001\",\n    \"signed_uuid\": \"signed_uuid_001\"\n}\n</code></pre>"},{"location":"#web-hooks","title":"Web Hooks","text":""},{"location":"#register-web-hook","title":"Register Web Hook","text":"<p>To receive updates about transaction status changes, you need to register a web hook URL with us.</p> <p>Registration Process:</p> <ol> <li>URL Registration:<ul> <li>Provide your endpoint URL where you wish to receive updates.</li> <li>Specify the event types you want to subscribe to (e.g., <code>transaction_completed</code>).</li> </ul> </li> </ol> <p>Request Example:</p> <pre><code>{\n    \"endpoint_url\": \"https://example.com/webhook\",\n    \"event_type\": \"transaction_completed\",\n    \"service_provider\": \"string\",\n    \"uuid\": \"string\",\n    \"signed_uuid\": \"string\"\n}\n</code></pre> <p>Response Example:</p> <pre><code>{\n    \"status\": \"success\",\n    \"code\": \"webhook_registered\",\n    \"message\": \"Web hook registered successfully.\",\n    \"data\": {\n        \"uuid\": \"uuid_001\",\n        \"signed_uuid\": \"signed_uuid_001\",\n        \"service_provider\": \"249_111\"\n    }\n}\n</code></pre> <ol> <li>On Transaction Completion:<ul> <li>When a transaction is completed, we will send a POST request to your registered URL with the following fields:</li> </ul> </li> </ol> <p>Request Body Example:</p> <pre><code>{\n    \"transaction_id\": \"string\",\n    \"status\": \"string\",\n    \"message\": \"string\",\n    \"updated_at\": \"string\",\n    \"uuid\": \"string\",\n    \"signed_uuid\": \"string\"\n}\n</code></pre> <p>Response Example:</p> <pre><code>{\n    \"status\": \"success\",\n    \"code\": \"webhook_received\",\n    \"message\": \"Webhook received successfully.\",\n    \"data\": {\n        \"uuid\": \"uuid_001\",\n        \"signed_uuid\": \"signed_uuid_001\"\n    }\n}\n</code></pre>"},{"location":"#keys-management-internal","title":"Keys Management [INTERNAL]","text":""},{"location":"#generate-keys","title":"Generate Keys","text":"<ul> <li>URL: <code>/api/v1/keys/generate</code></li> <li>Method: POST</li> <li>Description: Generates a new pair of public and private keys.</li> <li>Response:</li> </ul> <pre><code>{\n    \"status\": \"success\",\n    \"code\": \"keys_generated\",\n    \"message\": \"Keys generated successfully.\",\n    \"data\": {\n        \"public_key\": \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7...\",\n        \"private_key\": \"MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAo...\",\n        \"uuid\": \"uuid_001\",\n        \"signed_uuid\": \"signed_uuid_001\"\n    }\n}\n</code></pre> <ul> <li>Error Response Example:</li> </ul> <pre><code>{\n    \"status\": \"error\",\n    \"code\": \"key_generation_failed\",\n    \"message\": \"Unable to generate keys due to server error.\",\n    \"details\": \"An internal server error occurred while attempting to generate keys.\",\n    \"timestamp\": \"2024-05-24T12:10:00Z\",\n    \"uuid\": \"uuid_001\",\n    \"signed_uuid\": \"signed_uuid_001\"\n}\n</code></pre>"},{"location":"#rotate-keys","title":"Rotate Keys","text":"<ul> <li>URL: <code>/api/v1/keys/rotate</code></li> <li>Method: POST</li> <li>Description: Rotates the existing keys and generates a new pair of keys.</li> <li>Response:</li> </ul> <pre><code>{\n    \"status\": \"success\",\n    \"code\": \"keys_rotated\",\n    \"message\": \"Keys rotated successfully.\",\n    \"data\": {\n        \"new_public_key\": \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7...\",\n        \"new_private_key\": \"MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAo...\",\n        \"uuid\": \"uuid_001\",\n        \"signed_uuid\": \"signed_uuid_001\"\n    }\n}\n</code></pre> <ul> <li>Error Response Example:</li> </ul> <pre><code>{\n    \"status\": \"error\",\n    \"code\": \"key_rotation_failed\",\n    \"message\": \"Unable to rotate keys due to server error.\",\n    \"details\": \"An internal server error occurred while attempting to rotate keys.\",\n    \"timestamp\": \"2024-05-24T12:10:00Z\",\n    \"uuid\": \"uuid_001\",\n    \"signed_uuid\": \"signed_uuid_001\"\n}\n</code></pre>"},{"location":"#error-handling","title":"Error Handling","text":""},{"location":"#standard-error-response","title":"Standard Error Response:","text":"<pre><code>{\n    \"status\": \"error\",\n    \"code\": \"string\",\n    \"message\": \"string\",\n    \"details\": \"string\",\n    \"timestamp\": \"string\",\n    \"uuid\": \"string\",\n    \"signed_uuid\": \"string\"\n}\n</code></pre>"},{"location":"#common-error-codes","title":"Common Error Codes:","text":"<ul> <li>insufficient_balance<ul> <li>Message: \"Insufficient balance to complete the transaction.\"</li> <li>Details: \"The user does not have enough balance in their account.\"</li> <li>Resolution: \"Ensure the user has sufficient funds before retrying the transaction.\"</li> </ul> </li> <li>transaction_not_found<ul> <li>Message: \"Transaction ID not found.\"</li> <li>Details: \"The specified transaction ID does not exist.\"</li> <li>Resolution: \"Verify the transaction ID and try again.\"</li> </ul> </li> <li>invalid_uuid<ul> <li>Message: \"Invalid UUID format.\"</li> <li>Details: \"The provided UUID does not conform to the required format.\"</li> <li>Resolution: \"Check the UUID format and correct it before retrying.\"</li> </ul> </li> <li>permission_denied<ul> <li>Message: \"User does not have permission to perform this operation.\"</li> <li>Details: \"The authenticated user is not authorized to perform this operation.\"</li> <li>Resolution: \"Ensure the user has the necessary permissions before retrying.\"</li> </ul> </li> <li>invalid_transaction_id<ul> <li>Message: \"Invalid transaction ID.\"</li> <li>Details: \"The provided transaction ID is invalid.\"</li> <li>Resolution: \"Check the transaction ID and correct it before retrying.\"</li> </ul> </li> <li>key_generation_failed<ul> <li>Message: \"Unable to generate keys due to server error.\"</li> <li>Details: \"An internal server error occurred while attempting to generate keys.\"</li> <li>Resolution: \"Try again later. If the problem persists, contact support.\"</li> </ul> </li> <li>key_rotation_failed<ul> <li>Message: \"Unable to rotate keys due to server error.\"</li> <li>Details: \"An internal server error occurred while attempting to rotate keys.\"</li> <li>Resolution: \"Try again later. If the problem persists, contact support.\"</li> </ul> </li> </ul>"},{"location":"#nil-error-codes","title":"Nil Error Codes","text":"Error Code Description Potential Resolution insufficient_balance Insufficient balance to complete the transaction. Ensure the user has sufficient funds before retrying the transaction. transaction_not_found The specified transaction ID does not exist. Verify the transaction ID and try again. invalid_uuid The provided UUID does not conform to the required format. Check the UUID format and correct it before retrying. permission_denied The authenticated user is not authorized to perform this operation. Ensure the user has the necessary permissions before retrying. invalid_transaction_id The provided transaction ID is invalid. Check the transaction ID and correct it before retrying. key_generation_failed An internal server error occurred while attempting to generate keys. Try again later. If the problem persists, contact support. key_rotation_failed An internal server error occurred while attempting to rotate keys. Try again later. If the problem persists, contact support. bad_request Malformed request. Potentially missing some fields. Refer to API docs. internal_error A generic error for all server-specific errors. This indicates a service error at Nil. authentication_error An error in nil authentication. Are you following our encryption tutorial? Ensure you are signing the correct UUID <p>Certainly! Here is a more detailed section focusing on the status and code values for the API responses, following best practices and ensuring clarity:</p>"},{"location":"#status-and-code-usage","title":"Status and Code Usage","text":"<ul> <li><code>status</code>: Indicates the overall state of the transaction.</li> <li>Possible values: <code>pending</code>, <code>failed</code>, <code>success</code></li> <li><code>code</code>: Provides more specific information about the outcome of the transaction.</li> <li>Possible values include specific success or error codes.</li> </ul>"},{"location":"#detailed-tables-for-status-and-code","title":"Detailed Tables for Status and Code","text":""},{"location":"#status","title":"Status","text":"Status Description pending The transaction is in progress and not yet complete. failed The transaction has failed due to an error. success The transaction has completed successfully."},{"location":"#code","title":"Code","text":""},{"location":"#success-codes","title":"Success Codes","text":"Code Description topup_initiated The top-up transaction has been initiated successfully. cashout_initiated The cash-out transaction has been initiated successfully. transaction_completed The transaction has been completed successfully. user_info_retrieved User information has been retrieved successfully. keys_generated Keys have been generated successfully. keys_rotated Keys have been rotated successfully. webhook_registered The web hook has been registered successfully. successful_transaction Generic successful message."},{"location":"#error-codes","title":"Error Codes","text":"Code Description Resolution insufficient_balance Insufficient balance to complete the transaction. Ensure the user has sufficient funds before retrying. transaction_not_found The specified transaction ID does not exist. Verify the transaction ID and try again. invalid_uuid The provided UUID does not conform to the required format. Check the UUID format and correct it before retrying. permission_denied The authenticated user is not authorized to perform this operation. Ensure the user has the necessary permissions before retrying. invalid_transaction_id The provided transaction ID is invalid. Check the transaction ID and correct it before retrying. key_generation_failed Unable to generate keys due to server error. Try again later. If the problem persists, contact support. key_rotation_failed Unable to rotate keys due to server error. Try again later. If the problem persists, contact support. user_not_found The specified user does not exist. Ensure the user ID is correct and exists in the system. authentication_error An authentication error occurred. Ensure proper authentication credentials are provided. debit_failed Failed to debit from the balance. Investigate the error and retry the transaction. credit_failed Failed to credit the balance. Investigate the error and retry the transaction. rate_limit_exceeded The user has exceeded the rate limit. Wait for the rate limit to reset before making new requests. bad_request Malformed request. Potentially missing some fields. Check the request format and ensure all required fields are provided. internal_error A generic error for all server-specific errors. Investigate the server error logs and contact support if needed. aws_error AWS-related error during the transaction. Investigate AWS service logs and retry the transaction. encryption_error Error in data encryption or decryption process. Verify encryption settings and retry the transaction. user_not_found One or more users involved in the transaction do not exist. Ensure all involved user accounts exist and retry the transaction. missing_fields Required fields are missing in the request. Provide the missing fields and retry the transaction."},{"location":"#example-api-response","title":"Example API Response","text":"<p>Success Response</p> <pre><code>{\n    \"status\": \"success\",\n    \"code\": \"topup_initiated\",\n    \"message\": \"Transaction initiated successfully.\",\n    \"data\": {\n        \"transaction_id\": \"txn_001\",\n        \"status\": \"pending\",\n        \"amount\": 100.00,\n        \"currency\": \"USD\",\n        \"uuid\": \"uuid_001\",\n        \"signed_uuid\": \"signed_uuid_001\"\n    }\n}\n</code></pre> <p>Error Response</p> <pre><code>{\n    \"status\": \"failed\",\n    \"code\": \"insufficient_balance\",\n    \"message\": \"Insufficient balance to complete the transaction.\",\n    \"details\": \"The user does not have enough balance in their account.\",\n    \"timestamp\": \"2024-05-24T12:05:00Z\",\n    \"data\": {\n        \"uuid\": \"uuid_001\",\n        \"signed_uuid\": \"signed_uuid_001\",\n        \"status\": \"failed\"\n    }\n}\n</code></pre>"},{"location":"#security-considerations","title":"Security Considerations","text":"<ul> <li>VPN Tunnels: Secure VPN tunnels (Tailscale) for server-to-server communication.</li> <li>Exponential Backoff: Retry connections with exponential backoff, up to a specified number of attempts.</li> <li>Reversal Mechanism: Failed transactions moved to a reversal account for dedicated processing.</li> <li>Audit Logs: All transactions and key management operations logged for auditing.</li> <li>Encryption: Sensitive data encrypted in transit and at rest.</li> <li>Authentication and Authorization: Robust mechanisms to control API access.</li> </ul>"},{"location":"#rate-limiting-and-throttling","title":"Rate Limiting and Throttling","text":"<ul> <li>Policy:<ul> <li>Maximum 100 requests per minute per user.</li> <li>Requests exceeding the limit receive a <code>429 Too Many Requests</code> response.</li> </ul> </li> <li>Response for Exceeded Rate Limit:</li> </ul> <pre><code>{\n    \"status\": \"error\",\n    \"code\": \"rate_limit_exceeded\",\n    \"message\": \"Too Many Requests\",\n    \"details\": \"You have exceeded the rate limit. Please try again later.\",\n    \"retry_after\": \"60\",\n    \"uuid\": \"uuid_001\",\n    \"signed_uuid\": \"signed_uuid_001\"\n}\n</code></pre>"},{"location":"#versioning","title":"Versioning","text":"<ul> <li>Current Version: v1</li> <li>Versioning Strategy:<ul> <li>Major versions indicate breaking changes.</li> <li>Minor versions indicate backward-compatible additions.</li> <li>Patch versions indicate backward-compatible bug fixes.</li> </ul> </li> <li>Versioning Example:<ul> <li>URL: <code>/api/v1/topup/initiate</code></li> <li>Version: v1</li> </ul> </li> </ul>"},{"location":"#administrative-tasks-internal","title":"Administrative Tasks [INTERNAL]","text":""},{"location":"#tailscale-vpn-integration","title":"Tailscale VPN Integration","text":"<p>For secure communication between Nil and service providers, Tailscale VPN is used. If hosting systems on AWS or other cloud providers, Tailscale can be integrated into their environments.</p>"},{"location":"#tailscale-installation-for-local-development-and-test-environment","title":"Tailscale installation for local development and test environment","text":"<p>Here are installation notes for setting up Tailscale on a local development machine (Linux, Windows, or macOS) and signing in using Google identity for accessing servers secured behind a Tailscale network.</p> <p>Warning</p> <p>https://nil.tailf4a43a.ts.net is only accessible via our specific tailscale tailnet, you cannot access it via internet and you cannot access it via any other tailscale organization.</p>"},{"location":"#tailscale-installation-and-setup-guide-for-local-development","title":"Tailscale Installation and Setup Guide for Local Development","text":""},{"location":"#1-installation","title":"1. Installation","text":""},{"location":"#linux","title":"Linux","text":"<ol> <li>Install Tailscale:</li> <li>Open your terminal.</li> <li>Run the following command based on your distribution:</li> </ol> <p>Debian/Ubuntu: <pre><code>curl -fsSL https://tailscale.com/install.sh | sh\n</code></pre></p> <p>Fedora: <pre><code>sudo dnf install tailscale\n</code></pre></p> <p>Arch Linux: <pre><code>sudo pacman -S tailscale\n</code></pre></p> <p>Other distributions:    - Follow the installation instructions provided on Tailscale\u2019s Linux installation page.</p> <ol> <li>Start the Tailscale service: <pre><code>sudo tailscale up\n</code></pre></li> </ol>"},{"location":"#windows","title":"Windows","text":"<ol> <li>Download and Install Tailscale:</li> <li>Visit the Tailscale download page.</li> <li>Download the Windows installer.</li> <li> <p>Run the installer and follow the on-screen instructions.</p> </li> <li> <p>Start Tailscale:</p> </li> <li>After installation, Tailscale should automatically start. If not, search for \"Tailscale\" in the Start Menu and open it.</li> </ol>"},{"location":"#macos","title":"macOS","text":"<ol> <li>Download and Install Tailscale:</li> <li>Visit the Tailscale download page.</li> <li>Download the macOS installer.</li> <li> <p>Open the downloaded <code>.dmg</code> file and drag Tailscale to your Applications folder.</p> </li> <li> <p>Start Tailscale:</p> </li> <li>Open Tailscale from your Applications folder.</li> </ol>"},{"location":"#2-sign-in-via-google-identity","title":"2. Sign in via Google Identity","text":"<ol> <li>Initiate the Sign-In Process:</li> <li>Once Tailscale is installed and running, a browser window will open for you to log in.</li> <li> <p>If not automatically opened, you can initiate sign-in by running:      <pre><code>tailscale up\n</code></pre>      (on Linux) or by clicking \"Log in\" in the Tailscale app on Windows/macOS.</p> </li> <li> <p>Choose Google as your Identity Provider:</p> </li> <li>In the browser, select \"Log in with Google.\"</li> <li> <p>Choose the Google account associated with your organization (you can request this one from Nilpay)</p> </li> <li> <p>Authorize Tailscale:</p> </li> <li> <p>Follow the prompts to authorize Tailscale to access your Google account.</p> </li> <li> <p>Complete the Login:</p> </li> <li>After signing in, Tailscale will complete the setup on your local machine and connect to your Tailscale network.</li> </ol>"},{"location":"#3-accessing-servers-secured-by-tailscale","title":"3. Accessing Servers Secured by Tailscale","text":"<ol> <li>Connect to Your Tailscale Network:</li> <li>After logging in, your machine will be connected to the Tailscale network.</li> <li> <p>You can view connected devices and your network's IP addresses by running:      <pre><code>tailscale status\n</code></pre>      (on Linux) or by checking the Tailscale app on Windows/macOS.</p> </li> <li> <p>Access Servers:</p> </li> <li>Use the Tailscale IP address (e.g., <code>100.x.x.x</code>) of the server you need to access (since we are using MagicDNS, you will use https://nil.tailf4a43a.ts.net for all interactions) </li> <li>You can connect via SSH, HTTP, or any other protocol your server supports, using the Tailscale IP address as if it were on your local network.</li> </ol> <p>Example SSH Command: <pre><code>ssh user@100.x.x.x\n</code></pre></p> <ol> <li>Ensure Connectivity:</li> <li>Make sure your server allows connections from your Tailscale network and that your firewall rules are configured appropriately.</li> </ol>"},{"location":"#tailscale-with-aws-vpc","title":"Tailscale with AWS VPC","text":"<p>To integrate Tailscale with AWS VPC:</p> <ol> <li>Install Tailscale on EC2 Instances:<ul> <li>SSH into your EC2 instance.</li> <li>Install Tailscale by following the installation instructions for your OS from the Tailscale documentation.</li> </ul> </li> <li>Authenticate Tailscale:<ul> <li>Run <code>tailscale up</code> and authenticate using your Tailscale account.</li> </ul> </li> <li>Configure VPC Peering:<ul> <li>Use Tailscale's subnet routing feature to route traffic from the VPC to Tailscale nodes. This involves setting up Tailscale on a subnet router within your VPC.</li> </ul> </li> <li>Setup Subnet Routes:<ul> <li>Enable subnet routes on Tailscale by running <code>tailscale up --advertise-routes=10.0.0.0/16</code> (replace with your VPC CIDR).</li> </ul> </li> </ol>"},{"location":"#tailscale-with-other-cloud-providers","title":"Tailscale with Other Cloud Providers","text":"<p>For other cloud providers like GCP, Azure, or DigitalOcean, the process is similar. Install Tailscale on your virtual machines, authenticate, and configure subnet routing as per the provider's network setup.</p>"},{"location":"#data-field-rationale","title":"Data Field Rationale","text":"<p>In our API responses, the <code>data</code> field will contain different information depending on the context of the API call. Here is a breakdown of the possible structures:</p> <p>Note</p> <p>transaction_id is a system-generated ID (ksuid) for all transactions, while UUID is client-generated. Both can be used efficiently to retrieve a transaction's info.</p>"},{"location":"#top-up-response-data","title":"Top-up Response Data","text":"<ul> <li>Fields:<ul> <li><code>transaction_id</code>: Unique identifier for the transaction, generated by the Nil system.</li> <li><code>status</code>: Status of the transaction (e.g., pending, completed).</li> <li><code>amount</code>: Amount involved in the transaction.</li> <li><code>currency</code>: Currency of the transaction.</li> <li><code>uuid</code>: Unique identifier for the request.</li> <li><code>signed_uuid</code>: Signed unique identifier for the request.</li> </ul> </li> <li>Example:</li> </ul> <pre><code>{\n    \"transaction_id\": \"txn_001\",\n    \"status\": \"pending\",\n    \"amount\": 100.00,\n    \"currency\": \"USD\",\n    \"uuid\": \"uuid_001\",\n    \"signed_uuid\": \"signed_uuid_001\"\n}\n</code></pre>"},{"location":"#cash-out-response-data","title":"Cash-out Response Data","text":"<ul> <li>Fields:<ul> <li><code>transaction_id</code>: Unique identifier for the transaction.</li> <li><code>status</code>: Status of the transaction (e.g., pending, completed).</li> <li><code>amount</code>: Amount involved in the transaction.</li> <li><code>currency</code>: Currency of the transaction.</li> <li><code>timestamp</code>: Timestamp of the transaction.</li> <li><code>uuid</code>: Unique identifier for the request.</li> <li><code>signed_uuid</code>: Signed unique identifier for the request.</li> </ul> </li> <li>Example:</li> </ul> <pre><code>{\n    \"transaction_id\": \"txn_002\",\n    \"status\": \"pending\",\n    \"amount\": 200.00,\n    \"currency\": \"USD\",\n    \"timestamp\": \"2024-05-24T12:10:00Z\",\n    \"uuid\": \"uuid_001\",\n    \"signed_uuid\": \"signed_uuid_001\"\n}\n</code></pre>"},{"location":"#general-api-response-data","title":"General API Response Data","text":"<ul> <li>Description: This field will be used to return specific data relevant to the context of the API call, ensuring that responses are informative and useful for the API consumers.</li> <li>Note: Always refer to the specific API endpoint documentation to understand the exact structure and contents of the <code>data</code> field for that endpoint.</li> </ul> <p>OpenAPI Schema</p> <pre><code>openapi: 3.0.0\ninfo:\n  title: Non-blocking Transaction API\n  version: 1.0.0\npaths:\n  /api/v1/topup/initiate:\n    post:\n      summary: Initiate Top-up\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                user_id:\n                  type: string\n                amount:\n                  type: number\n                service_provider:\n                  type: string\n                uuid:\n                  type: string\n                signed_uuid:\n                  type: string\n                timestamp:\n                  type: string\n                currency:\n                  type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  code:\n                    type: string\n                  message:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      transaction_id:\n                        type: string\n                      status:\n                        type: string\n                      amount:\n                        type: number\n                      currency:\n                        type: string\n                      uuid:\n                        type: string\n                      signed_uuid:\n                        type: string\n        '400':\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /api/v1/cashout/initiate:\n    post:\n      summary: Initiate Cash Out\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                uuid:\n                  type: string\n                signed_uuid:\n                  type: string\n                timestamp:\n                  type: string\n                from_account:\n                  type: string\n                to_account:\n                  type: string\n                amount:\n                  type: number\n                currency:\n                  type: string\n                notes:\n                  type: string\n                service_provider:\n                  type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  code:\n                    type: string\n                  message:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      transaction_id:\n                        type: string\n                      status:\n                        type: string\n                      amount:\n                        type: number\n                      currency:\n                        type: string\n                      timestamp:\n                        type: string\n                      uuid:\n                        type: string\n                      signed_uuid:\n                        type: string\n        '400':\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /api/v1/transaction/status:\n    post:\n      summary: Check Transaction Status\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                uuid:\n                  type: string\n                signed_uuid:\n                  type: string\n                timestamp:\n                  type: string\n                service_provider:\n                  type: string\n                original_uuid:\n                  type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  code:\n                    type: string\n                  message:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      original_uuid:\n                        type: string\n                      status:\n                        type: string\n                      type:\n                        type: string\n                      details:\n                        type: string\n                      last_checked:\n                        type: string\n                      uuid:\n                        type: string\n                      signed_uuid:\n                        type: string\n        '400':\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /api/v1/user:\n    post:\n      summary: User Info\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                user_id:\n                  type: string\n                service_provider:\n                  type: string\n                uuid:\n                  type: string\n                signed_uuid:\n                  type: string\n                timestamp:\n                  type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  code:\n                    type: string\n                  message:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      user_id:\n                        type: string\n                      fullname:\n                        type: string\n                      status:\n                        type: string\n        '400':\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /api/v1/keys/generate:\n    post:\n      summary: Generate Keys\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  code:\n                    type: string\n                  message:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      public_key:\n                        type: string\n                      private_key:\n                        type: string\n                      uuid:\n                        type: string\n                      signed_uuid:\n                        type: string\n        '400':\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /api/v1/keys/rotate:\n    post:\n      summary: Rotate Keys\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  code:\n                    type: string\n                  message:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      new_public_key:\n                        type: string\n                      new_private_key:\n                        type: string\n                      uuid:\n                        type: string\n                      signed_uuid:\n                        type: string\n        '400':\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\ncomponents:\n  schemas:\n    Error:\n      type: object\n      properties:\n        status:\n          type: string\n        code:\n          type: string\n        message:\n          type: string\n        details:\n          type: string\n        timestamp:\n          type: string\n        uuid:\n          type: string\n        signed_uuid:\n          type: string\n</code></pre>"},{"location":"cashout/","title":"Cashout","text":""},{"location":"cashout/#cash-out-process-for-oss-users","title":"Cash Out Process for OSS Users","text":""},{"location":"cashout/#endpoints","title":"Endpoints","text":""},{"location":"cashout/#initiate-cash-out","title":"Initiate Cash Out","text":"<ul> <li>URL: <code>/api/v1/cashout/initiate</code></li> <li>Method: POST</li> <li>Description: Initiates a cash-out transaction for an OSS user.</li> <li>Request Body:</li> </ul> <pre><code>{\n    \"uuid\": \"string\",\n    \"signed_uuid\": \"string\",\n    \"timestamp\": \"string\",\n    \"from_account\": \"string\",\n    \"to_account\": \"string\",\n    \"amount\": \"number\",\n    \"currency\": \"string\",\n    \"notes\": \"string\",\n    \"service_provider\": \"string\"\n}\n</code></pre> <ul> <li>Response:</li> </ul> <pre><code>{\n    \"status\": \"success\",\n    \"code\": \"cashout_initiated\",\n    \"message\": \"Cash out request processed successfully.\",\n    \"data\": {\n        \"transaction_id\": \"txn_002\",\n        \"status\": \"pending\",\n        \"amount\": 200.00,\n        \"currency\": \"USD\",\n        \"timestamp\": \"2024-05-24T12:10:00Z\",\n        \"uuid\": \"uuid_001\",\n        \"signed_uuid\": \"signed_uuid_001\"\n    }\n}\n</code></pre> <ul> <li>Error Response Example:</li> </ul> <pre><code>{\n    \"status\": \"error\",\n    \"code\": \"permission_denied\",\n    \"message\": \"User does not have permission to perform this operation.\",\n    \"details\": \"The authenticated user is not authorized to perform this cash-out operation.\",\n    \"timestamp\": \"2024-05-24T12:10:00Z\",\n    \"uuid\": \"uuid_001\",\n    \"signed_uuid\": \"signed_uuid_001\"\n}\n</code></pre>"},{"location":"errors/","title":"Errors","text":""},{"location":"errors/#error-handling","title":"Error Handling","text":""},{"location":"errors/#standard-error-response","title":"Standard Error Response:","text":"<pre><code>{\n    \"status\": \"error\",\n    \"code\": \"string\",\n    \"message\": \"string\",\n    \"details\": \"string\",\n    \"timestamp\": \"string\",\n    \"uuid\": \"string\",\n    \"signed_uuid\": \"string\"\n}\n</code></pre>"},{"location":"errors/#common-error-codes","title":"Common Error Codes:","text":"<ul> <li>insufficient_balance<ul> <li>Message: \"Insufficient balance to complete the transaction.\"</li> <li>Details: \"The user does not have enough balance in their account.\"</li> <li>Resolution: \"Ensure the user has sufficient funds before retrying the transaction.\"</li> </ul> </li> <li>transaction_not_found<ul> <li>Message: \"Transaction ID not found.\"</li> <li>Details: \"The specified transaction ID does not exist.\"</li> <li>Resolution: \"Verify the transaction ID and try again.\"</li> </ul> </li> <li>invalid_uuid<ul> <li>Message: \"Invalid UUID format.\"</li> <li>Details: \"The provided UUID does not conform to the required format.\"</li> <li>Resolution: \"Check the UUID format and correct it before retrying.\"</li> </ul> </li> <li>permission_denied<ul> <li>Message: \"User does not have permission to perform this operation.\"</li> <li>Details: \"The authenticated user is not authorized to perform this operation.\"</li> <li>Resolution: \"Ensure the user has the necessary permissions before retrying.\"</li> </ul> </li> <li>invalid_transaction_id<ul> <li>Message: \"Invalid transaction ID.\"</li> <li>Details: \"The provided transaction ID is invalid.\"</li> <li>Resolution: \"Check the transaction ID and correct it before retrying.\"</li> </ul> </li> <li>key_generation_failed<ul> <li>Message: \"Unable to generate keys due to server error.\"</li> <li>Details: \"An internal server error occurred while attempting to generate keys.\"</li> <li>Resolution: \"Try again later. If the problem persists, contact support.\"</li> </ul> </li> <li>key_rotation_failed<ul> <li>Message: \"Unable to rotate keys due to server error.\"</li> <li>Details: \"An internal server error occurred while attempting to rotate keys.\"</li> <li>Resolution: \"Try again later. If the problem persists, contact support.\"</li> </ul> </li> </ul>"},{"location":"errors/#nil-error-codes","title":"Nil Error Codes","text":"Error Code Description Potential Resolution insufficient_balance Insufficient balance to complete the transaction. Ensure the user has sufficient funds before retrying the transaction. transaction_not_found The specified transaction ID does not exist. Verify the transaction ID and try again. invalid_uuid The provided UUID does not conform to the required format. Check the UUID format and correct it before retrying. permission_denied The authenticated user is not authorized to perform this operation. Ensure the user has the necessary permissions before retrying. invalid_transaction_id The provided transaction ID is invalid. Check the transaction ID and correct it before retrying. key_generation_failed An internal server error occurred while attempting to generate keys. Try again later. If the problem persists, contact support. key_rotation_failed An internal server error occurred while attempting to rotate keys. Try again later. If the problem persists, contact support. bad_request Malformed request. Potentially missing some fields. Refer to API docs. internal_error A generic error for all server-specific errors. This indicates a service error at Nil."},{"location":"get_user/","title":"Get user","text":""},{"location":"get_user/#user-info","title":"User Info","text":"<ul> <li>URL: <code>/api/v1/user</code></li> <li>Method: POST</li> <li>Description: Inquires about a nil user public profile</li> <li>Request Body:</li> </ul> <pre><code>{\n    \"user_id\": \"string\",\n    \"service_provider\": \"string\",\n    \"uuid\": \"string\",\n    \"signed_uuid\": \"string\",\n    \"timestamp\": \"string\"\n}\n</code></pre> <ul> <li>Response:</li> </ul> <pre><code>{\n    \"status\": \"success\",\n    \"code\": \"user_info_retrieved\",\n    \"message\": \"User info retrieved successfully.\",\n    \"data\": {\n        \"user_id\": \"user_1\",\n        \"fullname\": \"Mohamed Ahmed\",\n        \"status\": \"active\"\n    }\n}\n</code></pre> <ul> <li>Error Response Example:</li> </ul> <pre><code>{\n    \"status\": \"error\",\n    \"code\": \"invalid_user_id\",\n    \"message\": \"User doesn't exist.\",\n    \"details\": \"The user ID provided is invalid.\",\n    \"timestamp\": \"2024-05-24T12:05:00Z\",\n    \"uuid\": \"uuid_001\",\n    \"signed_uuid\": \"signed_uuid_001\"\n}\n</code></pre>"},{"location":"keys_mgmt/","title":"Keys mgmt","text":""},{"location":"keys_mgmt/#keys-management-internal","title":"Keys Management [INTERNAL]","text":""},{"location":"keys_mgmt/#generate-keys","title":"Generate Keys","text":"<ul> <li>URL: <code>/api/v1/keys/generate</code></li> <li>Method: POST</li> <li>Description: Generates a new pair of public and private keys.</li> <li>Response:</li> </ul> <pre><code>{\n    \"status\": \"success\",\n    \"code\": \"keys_generated\",\n    \"message\": \"Keys generated successfully.\",\n    \"data\": {\n        \"public_key\": \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7...\",\n        \"private_key\": \"MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAo...\",\n        \"uuid\": \"uuid_001\",\n        \"signed_uuid\": \"signed_uuid_001\"\n    }\n}\n</code></pre> <ul> <li>Error Response Example:</li> </ul> <pre><code>{\n    \"status\": \"error\",\n    \"code\": \"key_generation_failed\",\n    \"message\": \"Unable to generate keys due to server error.\",\n    \"details\": \"An internal server error occurred while attempting to generate keys.\",\n    \"timestamp\": \"2024-05-24T12:10:00Z\",\n    \"uuid\": \"uuid_001\",\n    \"signed_uuid\": \"signed_uuid_001\"\n}\n</code></pre>"},{"location":"keys_mgmt/#rotate-keys","title":"Rotate Keys","text":"<ul> <li>URL: <code>/api/v1/keys/rotate</code></li> <li>Method: POST</li> <li>Description: Rotates the existing keys and generates a new pair of keys.</li> <li>Response:</li> </ul> <pre><code>{\n    \"status\": \"success\",\n    \"code\": \"keys_rotated\",\n    \"message\": \"Keys rotated successfully.\",\n    \"data\": {\n        \"new_public_key\": \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7...\",\n        \"new_private_key\": \"MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAo...\",\n        \"uuid\": \"uuid_001\",\n        \"signed_uuid\": \"signed_uuid_001\"\n    }\n}\n</code></pre> <ul> <li>Error Response Example:</li> </ul> <pre><code>{\n    \"status\": \"error\",\n    \"code\": \"key_rotation_failed\",\n    \"message\": \"Unable to rotate keys due to server error.\",\n    \"details\": \"An internal server error occurred while attempting to rotate keys.\",\n    \"timestamp\": \"2024-05-24T12:10:00Z\",\n    \"uuid\": \"uuid_001\",\n    \"signed_uuid\": \"signed_uuid_001\"\n}\n</code></pre>"},{"location":"oss/","title":"OSS specific documentation","text":""},{"location":"oss/#cash-out-api-specification-updated","title":"Cash Out API Specification (Updated)","text":""},{"location":"oss/#endpoint","title":"Endpoint","text":"<p><code>POST /api/v1/cashout/initiate</code></p>"},{"location":"oss/#request-headers","title":"Request Headers","text":"<ul> <li><code>Content-Type: application/json</code></li> </ul>"},{"location":"oss/#request-body","title":"Request Body","text":"<pre><code>{\n  \"uuid\": \"string\",\n  \"signed_uuid\": \"string\",\n  \"to_account\": \"string\",\n  \"amount\": \"number\",\n  \"beneficiary\": {\n    \"account_id\": \"string\",\n    \"full_name\": \"string\",\n    \"mobile\": \"string\",\n    \"provider\": \"string\",\n    \"address\": \"string\",\n    \"branch\": \"string\"\n  },\n  \"currency\": \"string\",\n  \"service_provider\": \"string\",\n  \"cashout_provider\": \"string\"\n}\n</code></pre>"},{"location":"oss/#field-descriptions","title":"Field Descriptions","text":"<ul> <li><code>uuid</code>: A unique identifier for the request (UUIDv4 format)</li> <li><code>signed_uuid</code>: Base64 encoded signature of the hashed UUID</li> <li><code>to_account</code>: The recipient's account number</li> <li><code>amount</code>: The amount to be transferred (positive number)</li> <li><code>currency</code>: The currency of the transaction (e.g., \"SDG\")</li> <li><code>service_provider</code>: The identifier for the service provider</li> <li><code>cashout_provider</code>: The cash out provider (either \"nil\" or \"bok\")</li> </ul>"},{"location":"oss/#response","title":"Response","text":""},{"location":"oss/#success-response","title":"Success Response","text":"<ul> <li>Status Code: 200 OK</li> <li>Content-Type: application/json</li> </ul> <pre><code>{\n  \"code\": \"cashout_initiated\",\n  \"message\": \"Cash out request processed successfully.\",\n  \"data\": {\n    \"transaction_id\": \"string\",\n    \"status\": \"Pending\",\n    \"amount\": number,\n    \"currency\": \"string\",\n    \"timestamp\": \"string\",\n    \"uuid\": \"string\",\n    \"signed_uuid\": \"string\"\n  }\n}\n</code></pre>"},{"location":"oss/#error-responses","title":"Error Responses","text":"<ul> <li>Status Code: 400 Bad Request, 401 Unauthorized, or 500 Internal Server Error</li> <li>Content-Type: application/json</li> </ul> <pre><code>{\n  \"code\": \"string\",\n  \"message\": \"string\",\n  \"details\": \"string\",\n  \"timestamp\": \"string\",\n  \"uuid\": \"string\",\n  \"signed_uuid\": \"string\"\n}\n</code></pre>"},{"location":"oss/#error-codes","title":"Error Codes","text":"<ul> <li><code>malformed_request</code>: Invalid request format</li> <li><code>missing_fields</code>: Required fields are missing or invalid</li> <li><code>invalid_uuid</code>: Provided UUID is not a valid UUIDv4</li> <li><code>duplicate_request</code>: A request with the same UUID has already been processed</li> <li><code>service_provider_not_found</code>: The specified service provider does not exist</li> <li><code>user_not_found</code>: One or more users involved in the transaction do not exist</li> <li><code>authentication_error</code>: Signature verification failed</li> <li><code>cashout_provider_not_found</code>: Invalid cash out provider specified</li> <li><code>currency_not_supported</code>: The specified currency is not supported</li> <li><code>transaction_failed</code>: Unable to process the cash out request</li> </ul>"},{"location":"oss/#key-generation-and-signing-process","title":"Key Generation and Signing Process","text":"<ol> <li>Key Generation:</li> <li>Generate an RSA key pair (2048 bits recommended)</li> <li>Store the private key securely</li> <li> <p>Share the public key with the API provider</p> </li> <li> <p>Request Signing:</p> </li> <li>Generate a UUIDv4 for each request</li> <li>Hash the UUID using SHA-256</li> <li>Sign the hashed UUID using the private key with PKCS1v15 padding and SHA-256 as the hash function</li> <li> <p>Base64 encode the resulting signature</p> </li> <li> <p>Signature Verification (Server-side):</p> </li> <li>Decode the Base64 <code>signed_uuid</code></li> <li>Hash the provided <code>uuid</code> using SHA-256</li> <li>Verify the signature using the stored public key, PKCS1v15 padding, and SHA-256 as the hash function</li> </ol>"},{"location":"oss/#example-signing-process-go","title":"Example Signing Process (Go)","text":"<pre><code>import (\n    \"crypto\"\n    \"crypto/rand\"\n    \"crypto/rsa\"\n    \"crypto/sha256\"\n    \"encoding/base64\"\n    \"github.com/google/uuid\"\n)\n\nfunc signRequest(privateKey *rsa.PrivateKey) (string, string, error) {\n    // Generate UUID\n    uuidStr := uuid.New().String()\n\n    // Hash the UUID\n    hash := sha256.Sum256([]byte(uuidStr))\n\n    // Sign the hashed UUID\n    signature, err := rsa.SignPKCS1v15(rand.Reader, privateKey, crypto.SHA256, hash[:])\n    if err != nil {\n        return \"\", \"\", err\n    }\n\n    // Base64 encode the signature\n    signedUUID := base64.StdEncoding.EncodeToString(signature)\n\n    return uuidStr, signedUUID, nil\n}\n</code></pre>"},{"location":"oss/#notes","title":"Notes","text":"<ul> <li>All requests must use HTTPS</li> <li>The API uses idempotency based on the UUID to prevent duplicate transactions</li> <li>The service provider must be pre-registered and have a valid public key stored on the server</li> <li>The cash out provider must be either \"nil\" or \"bok\"</li> <li>Currently, only \"SDG\" is supported as a valid currency</li> <li>Always hash the UUID before signing to ensure consistent security practices</li> </ul>"},{"location":"oss/#getuserinfo-api","title":"GetUserInfo API","text":""},{"location":"oss/#endpoint_1","title":"Endpoint","text":"<p><code>POST /api/v1/user/info</code></p>"},{"location":"oss/#request-headers_1","title":"Request Headers","text":"<ul> <li><code>Content-Type: application/json</code></li> </ul>"},{"location":"oss/#request-body_1","title":"Request Body","text":"<pre><code>{\n  \"uuid\": \"string\",\n  \"signed_uuid\": \"string\",\n  \"mobile\": \"string\",\n  \"service_provider\": \"string\"\n}\n</code></pre>"},{"location":"oss/#field-descriptions_1","title":"Field Descriptions","text":"<ul> <li><code>uuid</code>: A unique identifier for the request (UUIDv4 format)</li> <li><code>signed_uuid</code>: Base64 encoded signature of the UUID</li> <li><code>mobile</code>: The mobile number of the user whose information is being requested</li> <li><code>service_provider</code>: The identifier for the service provider</li> </ul>"},{"location":"oss/#response_1","title":"Response","text":""},{"location":"oss/#success-response_1","title":"Success Response","text":"<ul> <li>Status Code: 200 OK</li> <li>Content-Type: application/json</li> </ul> <pre><code>{\n  \"code\": \"user_info_retrieved\",\n  \"message\": \"User info retrieved successfully.\",\n  \"data\": {\n    \"transaction_id\": \"string\",\n    \"timestamp\": \"string\",\n    \"mobile\": \"string\",\n    \"fullname\": \"string\",\n    \"tenant_id\": \"string\",\n    \"is_verified\": boolean,\n    \"account_id\": \"string\",\n    \"address\": \"string\"\n  }\n}\n</code></pre>"},{"location":"oss/#error-responses_1","title":"Error Responses","text":"<ul> <li>Status Code: 400 Bad Request, 401 Unauthorized, or 500 Internal Server Error</li> <li>Content-Type: application/json</li> </ul> <pre><code>{\n  \"code\": \"string\",\n  \"message\": \"string\",\n  \"details\": \"string\",\n  \"timestamp\": \"string\",\n  \"uuid\": \"string\",\n  \"signed_uuid\": \"string\"\n}\n</code></pre>"},{"location":"oss/#error-codes_1","title":"Error Codes","text":"<ul> <li><code>malformed_request</code>: Invalid request format</li> <li><code>missing_fields</code>: Required fields are missing or invalid</li> <li><code>service_provider_not_found</code>: The specified service provider does not exist</li> <li><code>authentication_error</code>: Signature verification failed</li> <li><code>transaction_failed</code>: Unable to retrieve user information</li> </ul>"},{"location":"oss/#notes_1","title":"Notes","text":"<ul> <li>All requests must use HTTPS</li> <li>The service provider must be pre-registered and have a valid public key stored on the server</li> <li>The <code>is_verified</code> field in the response is currently always set to <code>true</code></li> <li>The <code>address</code> field in the response is currently always set to \"N/A\"</li> </ul>"},{"location":"oss/#cash-out-webhook-api-documentation","title":"Cash Out Webhook API Documentation","text":""},{"location":"oss/#overview","title":"Overview","text":"<p>This webhook sends real-time updates about the status of cash out transactions. Subscribers will receive a POST request to their specified URL whenever a transaction status changes.</p>"},{"location":"oss/#endpoint_2","title":"Endpoint","text":"<p><code>POST {subscriber_specified_url}</code></p>"},{"location":"oss/#request-headers_2","title":"Request Headers","text":"<ul> <li><code>Content-Type: application/json</code></li> </ul>"},{"location":"oss/#payload","title":"Payload","text":"<pre><code>{\n  \"transaction_id\": \"string\",\n  \"amount\": number,\n  \"status\": \"string\",\n  \"timestamp\": \"string\",\n  \"from_account\": \"string\",\n  \"to_account\": \"string\",\n  \"uuid\": \"string\",\n  \"cashout_provider\": \"string\",\n  \"comment\": \"string\"\n}\n</code></pre>"},{"location":"oss/#field-descriptions_2","title":"Field Descriptions","text":"<ul> <li><code>transaction_id</code>: A unique identifier for the transaction (system generated, KSUID)</li> <li><code>amount</code>: The transaction amount.</li> <li><code>status</code>: The current status of the transaction (e.g., \"Completed\", \"Pending\", \"Failed\").</li> <li><code>timestamp</code>: The ISO 8601 formatted date and time when the status was updated.</li> <li><code>from_account</code>: The source account identifier (may be a generic identifier for escrow accounts).</li> <li><code>to_account</code>: The destination account identifier (partially masked for privacy).</li> <li><code>cashout_provider</code>: The identifier for the cash out provider (if applicable).</li> <li><code>comment</code>: A brief description or comment about the transaction.</li> <li><code>uuid</code>: client generated uuid for the request</li> </ul>"},{"location":"oss/#sample-payload","title":"Sample Payload","text":"<pre><code>{\n  \"transaction_id\": \"2l9L6Ef49M1jWGa8ZNQ2dUZigVQ\",\n  \"amount\": 1,\n  \"status\": \"Completed\",\n  \"timestamp\": \"2024-08-25T11:59:29Z\",\n  \"from_account\": \"NIL_ESCROW_ACCOUNT\",\n  \"to_account\": \"096****6869\",\n  \"cashout_provider\": \"nil\",\n  \"comment\": \"Cashout\",\n  \"uuid\": \"your-generated-valid-uuid-v4\",\n}\n</code></pre>"},{"location":"oss/#possible-status-values","title":"Possible Status Values","text":"<ul> <li><code>Pending</code>: The transaction has been initiated but not yet completed.</li> <li><code>Completed</code>: The transaction has been successfully processed.</li> <li><code>Failed</code>: The transaction could not be completed.</li> <li><code>Cancelled</code>: The transaction was cancelled before completion.</li> </ul>"},{"location":"oss/#security-considerations","title":"Security Considerations","text":""},{"location":"oss/#https","title":"HTTPS","text":"<p>All webhook communications should be done over HTTPS to ensure data privacy in transit.</p>"},{"location":"oss/#best-practices-for-webhook-consumers","title":"Best Practices for Webhook Consumers","text":"<ol> <li>Respond quickly to the webhook with a 2xx status code. Process the data asynchronously if needed.</li> <li>Implement retry logic with exponential backoff for failed webhook deliveries.</li> <li>Store the <code>transaction_id</code> to prevent duplicate processing in case of repeated webhook deliveries.</li> <li>Validate all incoming data before processing.</li> <li>Be prepared to handle occasional out-of-order webhook deliveries.</li> </ol>"},{"location":"oss/#rate-limiting","title":"Rate Limiting","text":"<p>Webhooks are sent as events occur. There is no specific rate limit, but consumers should be prepared to handle varying volumes of incoming webhooks.</p>"},{"location":"oss/#support","title":"Support","text":"<p>For any issues or questions regarding the webhook integration, please contact our support team at info@pynil.com.</p>"},{"location":"responses/","title":"Responses","text":""},{"location":"responses/#general-api-response-data","title":"General API Response Data","text":"<ul> <li>Description: This field will be used to return specific data relevant to the context of the API call, ensuring that responses are informative and useful for the API consumers.</li> <li>Note: Always refer to the specific API endpoint documentation to understand the exact structure and contents of the <code>data</code> field for that endpoint.</li> </ul>"},{"location":"responses/#cash-out-response-data","title":"Cash-out Response Data","text":"<ul> <li>Fields:<ul> <li><code>transaction_id</code>: Unique identifier for the transaction.</li> <li><code>status</code>: Status of the transaction (e.g., pending, completed).</li> <li><code>amount</code>: Amount involved in the transaction.</li> <li><code>currency</code>: Currency of the transaction.</li> <li><code>timestamp</code>: Timestamp of the transaction.</li> <li><code>uuid</code>: Unique identifier for the request.</li> <li><code>signed_uuid</code>: Signed unique identifier for the request.</li> </ul> </li> <li>Example:</li> </ul> <pre><code>{\n    \"transaction_id\": \"txn_002\",\n    \"status\": \"pending\",\n    \"amount\": 200.00,\n    \"currency\": \"USD\",\n    \"timestamp\": \"2024-05-24T12:10:00Z\",\n    \"uuid\": \"uuid_001\",\n    \"signed_uuid\": \"signed_uuid_001\"\n}\n</code></pre>"},{"location":"security/","title":"Security","text":""},{"location":"security/#security-considerations","title":"Security Considerations","text":"<ul> <li>VPN Tunnels: Secure VPN tunnels (Tailscale) for server-to-server communication.</li> <li>Exponential Backoff: Retry connections with exponential backoff, up to a specified number of attempts.</li> <li>Reversal Mechanism: Failed transactions moved to a reversal account for dedicated processing.</li> <li>Audit Logs: All transactions and key management operations logged for auditing.</li> <li>Encryption: Sensitive data encrypted in transit and at rest.</li> <li>Authentication and Authorization: Robust mechanisms to control API access.</li> </ul>"},{"location":"security/#rate-limiting-and-throttling","title":"Rate Limiting and Throttling","text":"<ul> <li>Policy:<ul> <li>Maximum 100 requests per minute per user.</li> <li>Requests exceeding the limit receive a <code>429 Too Many Requests</code> response.</li> </ul> </li> <li>Response for Exceeded Rate Limit:</li> </ul> <pre><code>{\n    \"status\": \"error\",\n    \"code\": \"rate_limit_exceeded\",\n    \"message\": \"Too Many Requests\",\n    \"details\": \"You have exceeded the rate limit. Please try again later.\",\n    \"retry_after\": \"60\",\n    \"uuid\": \"uuid_001\",\n    \"signed_uuid\": \"signed_uuid_001\"\n}\n</code></pre>"},{"location":"status/","title":"Status","text":""},{"location":"status/#check-transaction-status","title":"Check Transaction Status","text":"<ul> <li>URL: <code>/api/v1/transaction/status</code></li> <li>Method: POST</li> <li>Description: Checks the status of a transaction.</li> <li>Request Parameters:</li> </ul> <pre><code>{\n    \"uuid\": \"string\",\n    \"signed_uuid\": \"string\",\n    \"timestamp\": \"string\",\n    \"service_provider\": \"string\",\n    \"original_uuid\": \"string\"\n}\n</code></pre> <ul> <li>Response:</li> </ul> <pre><code>{\n    \"status\": \"success\",\n    \"code\": \"transaction_status_retrieved\",\n    \"message\": \"Transaction status retrieved successfully.\",\n    \"data\": {\n        \"original_uuid\": \"txn_001\",\n        \"status\": \"completed\",\n        \"type\": \"top-up\",\n        \"details\": \"Transaction processed successfully.\",\n        \"last_checked\": \"2024-05-24T12:05:00Z\",\n        \"uuid\": \"uuid_001\",\n        \"signed_uuid\": \"signed_uuid_001\"\n    }\n}\n</code></pre>"},{"location":"topup/","title":"Topup","text":""},{"location":"topup/#initiate-top-up","title":"Initiate Top-up","text":"<ul> <li>URL: <code>/api/v1/topup/initiate</code></li> <li>Method: POST</li> <li>Description: Initiates a top-up transaction for a Nil user.</li> <li>Request Body:</li> </ul> <pre><code>{\n    \"user_id\": \"string\",\n    \"amount\": \"number\",\n    \"service_provider\": \"string\",\n    \"uuid\": \"string\",\n    \"signed_uuid\": \"string\",\n    \"timestamp\": \"string\",\n    \"currency\": \"string\"\n}\n</code></pre> <ul> <li>Response:</li> </ul> <pre><code>{\n    \"status\": \"success\",\n    \"code\": \"topup_initiated\",\n    \"message\": \"Transaction initiated successfully.\",\n    \"data\": {\n        \"transaction_id\": \"txn_001\",\n        \"status\": \"pending\",\n        \"amount\": 100.00,\n        \"currency\": \"USD\",\n        \"uuid\": \"uuid_001\",\n        \"signed_uuid\": \"signed_uuid_001\"\n    }\n}\n</code></pre> <ul> <li>Error Response Example:</li> </ul> <pre><code>{\n    \"status\": \"error\",\n    \"code\": \"insufficient_balance\",\n    \"message\": \"Insufficient balance to complete the transaction.\",\n    \"details\": \"The user does not have enough balance in their account.\",\n    \"timestamp\": \"2024-05-24T12:05:00Z\",\n    \"uuid\": \"uuid_001\",\n    \"signed_uuid\": \"signed_uuid_001\"\n}\n</code></pre>"},{"location":"versioning/","title":"Versioning","text":""},{"location":"versioning/#versioning","title":"Versioning","text":"<ul> <li>Current Version: v1</li> <li>Versioning Strategy:<ul> <li>Major versions indicate breaking changes.</li> <li>Minor versions indicate backward-compatible additions.</li> <li>Patch versions indicate backward-compatible bug fixes.</li> </ul> </li> <li>Versioning Example:<ul> <li>URL: <code>/api/v1/topup/initiate</code></li> <li>Version: v1</li> </ul> </li> </ul>"},{"location":"vpn/","title":"Vpn","text":""},{"location":"vpn/#tailscale-vpn-integration","title":"Tailscale VPN Integration","text":"<p>For secure communication between Nil and service providers, Tailscale VPN is used. If hosting systems on AWS or other cloud providers, Tailscale can be integrated into their environments.</p>"},{"location":"vpn/#tailscale-with-aws-vpc","title":"Tailscale with AWS VPC","text":"<p>To integrate Tailscale with AWS VPC:</p> <ol> <li>Install Tailscale on EC2 Instances:<ul> <li>SSH into your EC2 instance.</li> <li>Install Tailscale by following the installation instructions for your OS from the Tailscale documentation.</li> </ul> </li> <li>Authenticate Tailscale:<ul> <li>Run <code>tailscale up</code> and authenticate using your Tailscale account.</li> </ul> </li> <li>Configure VPC Peering:<ul> <li>Use Tailscale's subnet routing feature to route traffic from the VPC to Tailscale nodes. This involves setting up Tailscale on a subnet router within your VPC.</li> </ul> </li> <li>Setup Subnet Routes:<ul> <li>Enable subnet routes on Tailscale by running <code>tailscale up --advertise-routes=10.0.0.0/16</code> (replace with your VPC CIDR).</li> </ul> </li> </ol>"},{"location":"vpn/#tailscale-with-other-cloud-providers","title":"Tailscale with Other Cloud Providers","text":"<p>For other cloud providers like GCP, Azure, or DigitalOcean, the process is similar. Install Tailscale on your virtual machines, authenticate, and configure subnet routing as per the provider's network setup.</p>"},{"location":"vpn/#accessing-connected-tailscale-nodes","title":"Accessing Connected Tailscale Nodes","text":"<p>To manage and access information about connected Tailscale nodes:</p> <ol> <li>Tailscale Admin Console:<ul> <li>Use the Tailscale admin console to view all connected nodes, their IP addresses, and status.</li> </ul> </li> <li>Tailscale API:<ul> <li>Use the Tailscale API to programmatically access information about nodes, including their connection status and details.</li> </ul> </li> </ol>"},{"location":"vpn/#tailscale-acl-configuration","title":"Tailscale ACL Configuration","text":"<p>To limit service provider interaction to a subset of endpoints, configure Tailscale ACLs:</p> <pre><code>{\n  \"tagOwners\": {\n    \"tag:service-providers\": [\"&lt;identity-of-node-allowed-to-tag&gt;\"]\n  },\n  \"acl\": [\n    {\n      \"action\": \"accept\",\n      \"src\": [\"tag:service-providers\"],\n      \"dst\": [\"10.0.0.0/24:*\"]\n    }\n  ]\n}\n</code></pre>"},{"location":"vpn/#steps-to-apply-acl","title":"Steps to Apply ACL","text":"<ol> <li>Access Tailscale Admin Console:<ul> <li>Go to the Tailscale admin console.</li> <li>Navigate to the \"Access Controls\" section.</li> </ul> </li> <li>Edit ACLs:<ul> <li>Add the ACL JSON configuration.</li> <li>Save and apply the changes.</li> </ul> </li> </ol>"},{"location":"vpn/#data-field-rationale","title":"Data Field Rationale","text":"<p>In our API responses, the <code>data</code> field will contain different information depending on the context of the API call. Here is a breakdown of the possible structures:</p>"},{"location":"vpn/#top-up-response-data","title":"Top-up Response Data","text":"<ul> <li>Fields:<ul> <li><code>transaction_id</code>: Unique identifier for the transaction.</li> <li><code>status</code>: Status of the transaction (e.g., pending, completed).</li> <li><code>amount</code>: Amount involved in the transaction.</li> <li><code>currency</code>: Currency of the transaction.</li> <li><code>uuid</code>: Unique identifier for the request.</li> <li><code>signed_uuid</code>: Signed unique identifier for the request.</li> </ul> </li> <li>Example:</li> </ul> <pre><code>{\n    \"transaction_id\": \"txn_001\",\n    \"status\": \"pending\",\n    \"amount\": 100.00,\n    \"currency\": \"USD\",\n    \"uuid\": \"uuid_001\",\n    \"signed_uuid\": \"signed_uuid_001\"\n}\n</code></pre>"},{"location":"webhooks/","title":"Webhooks","text":""},{"location":"webhooks/#web-hooks","title":"Web Hooks","text":""},{"location":"webhooks/#register-web-hook","title":"Register Web Hook","text":"<p>To receive updates about transaction status changes, you need to register a web hook URL with us.</p> <p>Registration Process:</p> <ol> <li>URL Registration:<ul> <li>Provide your endpoint URL where you wish to receive updates.</li> <li>Specify the event types you want to subscribe to (e.g., <code>transaction_completed</code>).</li> </ul> </li> </ol> <p>Request Example:</p> <pre><code>{\n    \"endpoint_url\": \"https://example.com/webhook\",\n    \"event_type\": \"transaction_completed\",\n    \"service_provider\": \"string\",\n    \"uuid\": \"string\",\n    \"signed_uuid\": \"string\"\n}\n</code></pre> <p>Response Example:</p> <pre><code>{\n    \"status\": \"success\",\n    \"code\": \"webhook_registered\",\n    \"message\": \"Web hook registered successfully.\",\n    \"data\": {\n        \"uuid\": \"uuid_001\",\n        \"signed_uuid\": \"signed_uuid_001\",\n        \"service_provider\": \"249_111\"\n    }\n}\n</code></pre> <ol> <li>On Transaction Completion:<ul> <li>When a transaction is completed, we will send a POST request to your registered URL with the following fields:</li> </ul> </li> </ol> <p>Request Body Example:</p> <pre><code>{\n    \"transaction_id\": \"string\",\n    \"status\": \"string\",\n    \"message\": \"string\",\n    \"updated_at\": \"string\",\n    \"uuid\": \"string\",\n    \"signed_uuid\": \"string\"\n}\n</code></pre> <p>Response Example:</p> <pre><code>{\n    \"status\": \"success\",\n    \"code\": \"webhook_received\",\n    \"message\": \"Webhook received successfully.\",\n    \"data\": {\n        \"uuid\": \"uuid_001\",\n        \"signed_uuid\": \"signed_uuid_001\"\n    }\n}\n</code></pre>"}]}